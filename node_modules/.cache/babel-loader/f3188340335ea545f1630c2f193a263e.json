{"ast":null,"code":"import _objectSpread from \"/Users/hwangjeahong/Desktop/Git/React/marioplan/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: 'Net',\n      authorLastName: 'Ninja',\n      authorId: 12345,\n      createAt: new Date()\n    })).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/hwangjeahong/Desktop/Git/React/marioplan/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","collection","add","authorFirstName","authorLastName","authorId","createAt","Date","then","type","catch","err"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACzC,SAAM,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC5D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACIP,OADJ;AAECQ,MAAAA,eAAe,EAAE,KAFlB;AAGCC,MAAAA,cAAc,EAAE,OAHjB;AAICC,MAAAA,QAAQ,EAAE,KAJX;AAKCC,MAAAA,QAAQ,EAAE,IAAIC,IAAJ;AALX,QAMGC,IANH,CAMQ,MAAM;AACbZ,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,gBAAR;AAA0Bd,QAAAA;AAA1B,OAAD,CAAR;AACA,KARD,EAQGe,KARH,CAQUC,GAAD,IAAS;AACjBf,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACA,KAVD;AAYA,GAfD;AAgBA,CAjBM","sourcesContent":["export const createProject = (project) => {\n\treturn(dispatch, getState, { getFirebase, getFirestore }) => {\n\t\t// make async call to database\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('projects').add({\n\t\t\t...project,\n\t\t\tauthorFirstName: 'Net',\n\t\t\tauthorLastName: 'Ninja',\n\t\t\tauthorId: 12345,\n\t\t\tcreateAt: new Date()\n\t\t}).then(() => {\n\t\t\tdispatch({ type: 'CREATE_PROJECT', project});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: 'CREATE_PROJECT_ERROR', err });\n\t\t})\n\t\t\n\t}\n};"]},"metadata":{},"sourceType":"module"}